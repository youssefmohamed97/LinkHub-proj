// eslint-disable-next-line camelcase,@typescript-eslint/class-name-casing
var __PHP_Incomplete_Class = /** @class */ (function () {
    function __PHP_Incomplete_Class(name) {
        this.__PHP_Incomplete_Class_Name = name;
    }
    return __PHP_Incomplete_Class;
}());
export { __PHP_Incomplete_Class };
export function getByteLength(contents, options) {
    if (typeof Buffer !== 'undefined') {
        return Buffer.byteLength(contents, options.encoding);
    }
    return encodeURIComponent(contents).replace(/%[A-F\d]{2}/g, 'U').length;
}
// isInteger = is NOT a float but still a number
export function isInteger(value) {
    return typeof value === 'number' && parseInt(value.toString(), 10) === value;
}
export function getIncompleteClass(name) {
    return new __PHP_Incomplete_Class(name);
}
export function getClass(prototype) {
    function PhpClass() {
        // No Op
    }
    PhpClass.prototype = prototype;
    return PhpClass;
}
